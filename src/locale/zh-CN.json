{
  "Customize Dynamic Columns": "自定义动态列",
  "Dynamic Columns Configuration": "动态列配置",
  "Cancel": "取消",
  "Save": "保存",
  "Default Show Dynamic Columns": "默认显示动态列",
  "Please configure dynamic columns first": "请先配置动态列",
  "Dynamic Columns": "动态列",
  "Apply": "应用 - 动态列",
  "Close": "关闭 - 动态列",
  "Please input {label}": "请输入{label}",
  "Configuration saved successfully": "配置保存成功",
  "Form Schema": "表单结构",
  "If enabled, a form will pop up when the user clicks the dynamic column button, otherwise the user clicks the dynamic column button to directly display/close the dynamic column": "如果启用自定义表单，则用户点击动态列按钮时，会弹出表单供用户输入，否则用户点击动态列按钮时，会直接显示/关闭动态列",
  "Used to generate a form for user operation, the value of the form will be passed to the sql template below": "用于生成表单供用户操作，表单的值会被传递至下方sql模板",
  "Row ID Column Index": "行ID列索引",
  "Please enter the column index for row ID": "请输入用于获取行ID的列索引",
  "Minimum value is 0": "最小值为0",
  "Required. The column index to get row ID, minimum 0.": "必填。用于获取行ID的列索引，最小为0。",
  "Insert Dynamic Columns After Column Index": "插入动态列到指定列索引后",
  "-1 means after the last column": "-1表示最后一列之后",
  "Minimum value is -1": "最小值为-1",
  "Optional. -1 means after the last column, minimum -1.": "可选。-1表示最后一列之后，最小为-1。",
  "Use Custom Form": "使用自定义表单",
  "Enter your form schema here...": "在此输入表单结构...",
  "Dynamic Column Header Function Template (JS)": "动态列头函数模板(JS)",
  "A JS function template to generate dynamic column headers. Signature: (customForm, filterForm). Must return an object with type (sql|api) and data. See below for details and examples.": "用于生成动态列头的JS函数模板。签名：(customForm, filterForm)。必须返回包含type(sql|api)和data的对象。详见下方说明和示例。",
  "Enter your JS function template for dynamic column headers...": "请输入动态列头的JS函数模板...",
  "Dynamic Column RowData Function Template (JS)": "动态列行数据函数模板(JS)",
  "A JS function template to generate dynamic column row-data. Signature: (customForm, filterForm, rowIds). Must return an object with type (sql|api) and data. See below for details and examples.": "用于生成动态列行数据的JS函数模板。签名：(customForm, filterForm, rowIds)。必须返回包含type(sql|api)和data的对象。详见下方说明和示例。",
  "Enter your JS function template for dynamic column row-data...": "请输入动态列行数据的JS函数模板...",
  "Configuration Guide": "配置指南",
  "Form Schema Configuration": "表单结构配置",
  "Supported Field Types": "支持的字段类型",
  "Number input": "数字输入",
  "Switch": "开关",
  "Dropdown (requires options)": "下拉框(需配置选项)",
  "Date picker": "日期选择器",
  "Datetime picker": "日期时间选择器",
  "Example": "示例",
  "Available Filter Form Fields": "可用过滤表单字段",
  "Dynamic Column Header Function Template": "动态列头函数模板",
  "Function signature:": "函数签名：",
  "Return format (SQL type):": "返回格式(SQL类型)：",
  "Return format (API type):": "返回格式(API类型)：",
  "Example:": "示例：",
  "Dynamic Column RowData Function Template": "动态列行数据函数模板"
}
